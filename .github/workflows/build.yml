name: Building

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
  push:
    branches:
      - '*'
    paths-ignore:
      - '**.md'
      - '.github/**'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'

env:
  DOCKERHUB_SLUG: arabcoders/watchstate
  GHCR_SLUG: ghcr.io/arabcoders/watchstate
  PLATFORMS: linux/amd64,linux/arm64,linux/arm

jobs:
  unit-tests:
    name: PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [ 8.3 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update Version File
        uses: arabcoders/write-version-to-file@master
        with:
          filename: '/config/config.php'
          placeholder: '$(version_via_ci)'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, mbstring, ctype, curl, sqlite3
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: restore cached dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.COMPOSER_CACHE_DIR }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - run: composer install --prefer-dist --no-interaction --no-progress
      - run: composer run test

  publish_docker_images:
    needs: unit-tests
    if: github.event_name != 'pull_request'
    runs-on: "ubuntu-latest"
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: bahmutov/npm-install@v1
        with:
          working-directory: frontend

      - name: Update Version File
        uses: arabcoders/write-version-to-file@master
        with:
          filename: '/config/config.php'
          placeholder: '$(version_via_ci)'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value={{branch}}{{base_ref}}-{{date 'YYYYMMDD'}}-{{sha}}
          flavor: |
            latest=false

      - name: Login to github
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

  dockerhub-sync-readme:
    needs: publish_docker_images
    runs-on: ubuntu-latest
    steps:
      - name: Sync README
        uses: docker://lsiodev/readme-sync:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          GIT_REPOSITORY: ${{ github.repository }}
          DOCKER_REPOSITORY: ${{ env.DOCKERHUB_SLUG }}
          GIT_BRANCH: master
        with:
          entrypoint: node
          args: /opt/docker-readme-sync/sync
