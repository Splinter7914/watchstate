name: Generate Changelog

on:
  push:
    tags:
      - "*"  # Trigger on any tag push
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  generate-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we get all tags and history

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gitpython

      - name: Get Branch Name from Tag
        id: branch_name
        run: |
          # Try to get the latest tag; if none exist, fallback to the current branch name.
          TAG_NAME=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$TAG_NAME" ]; then
            echo "No tags found, using current branch name instead."
            TAG_NAME=$(git rev-parse --abbrev-ref HEAD)
          fi
          # Assume the tag (or branch name) is in the format "branch-something".
          BRANCH_NAME=$(echo "$TAG_NAME" | cut -d '-' -f1)
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "Detected Tag: $TAG_NAME on Branch: $BRANCH_NAME"

      - name: Commit and Push to GitHub Pages
        run: |
          # Configure git
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Define a temporary directory for the gh-pages worktree
          WORKTREE_DIR=gh-pages-worktree

          # Add (or update) a worktree for the gh-pages branch.
          # If the branch exists, check it out; if not, create it.
          if git show-ref --verify --quiet refs/heads/gh-pages; then
            git worktree add $WORKTREE_DIR gh-pages
          else
            git worktree add -B gh-pages $WORKTREE_DIR
          fi

          python .github/scripts/generate_changelog.py --repo_path . --changelog_path ./CHANGELOG-${BRANCH_NAME}.json --branch_name $BRANCH_NAME

          # Copy the updated changelog file into the worktree directory.
          cp CHANGELOG-${BRANCH_NAME}.json $WORKTREE_DIR/

          # Change into the worktree directory.
          cd $WORKTREE_DIR

          # Stage and commit only the updated changelog file.
          git add CHANGELOG-${BRANCH_NAME}.json
          git commit -m "Update Changelog for ${TAG_NAME}" || echo "No changes to commit"

          # Push the changes to the gh-pages branch.
          git push origin gh-pages

          # (Optional) Clean up the worktree directory.
          cd ..
          rm -rf $WORKTREE_DIR
